"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var Node_1 = require("./Node");
var B = function (_a) {
    var _b = _a === void 0 ? {} : _a, className = _b.className, children = _b.children, style = _b.style, id = _b.id, attributes = _b.attributes, onAbort = _b.onAbort, onAnimationCancel = _b.onAnimationCancel, onAnimationEnd = _b.onAnimationEnd, onAnimationIteration = _b.onAnimationIteration, onAnimationStart = _b.onAnimationStart, onAuxClick = _b.onAuxClick, onBlur = _b.onBlur, onCancel = _b.onCancel, onCanPlay = _b.onCanPlay, onCanPlayThrough = _b.onCanPlayThrough, onChange = _b.onChange, onClick = _b.onClick, onClose = _b.onClose, onContextMenu = _b.onContextMenu, onCueChange = _b.onCueChange, onDblClick = _b.onDblClick, onDrag = _b.onDrag, onDragEnd = _b.onDragEnd, onDragEnter = _b.onDragEnter, onDragExit = _b.onDragExit, onDragLeave = _b.onDragLeave, onDragOver = _b.onDragOver, onDragStart = _b.onDragStart, onDrop = _b.onDrop, onDurationChange = _b.onDurationChange, onEmptied = _b.onEmptied, onEnded = _b.onEnded, onError = _b.onError, onFocus = _b.onFocus, onGotPointerCapture = _b.onGotPointerCapture, onInput = _b.onInput, onInvalid = _b.onInvalid, onKeyDown = _b.onKeyDown, onKeyPress = _b.onKeyPress, onKeyUp = _b.onKeyUp, onLoad = _b.onLoad, onLoadedData = _b.onLoadedData, onLoadedMetaData = _b.onLoadedMetaData, onLoadStart = _b.onLoadStart, onLostPointerCapture = _b.onLostPointerCapture, onMouseDown = _b.onMouseDown, onMouseEnter = _b.onMouseEnter, onMouseLeave = _b.onMouseLeave, onMouseMove = _b.onMouseMove, onMouseOut = _b.onMouseOut, onMouseOver = _b.onMouseOver, onMouseUp = _b.onMouseUp, onPause = _b.onPause, onPlay = _b.onPlay, onPlaying = _b.onPlaying, onPointerCancel = _b.onPointerCancel, onPointerDown = _b.onPointerDown, onPointerEnter = _b.onPointerEnter, onPointerLeave = _b.onPointerLeave, onPointerMove = _b.onPointerMove, onPointerOut = _b.onPointerOut, onPointerOver = _b.onPointerOver, onPointerUp = _b.onPointerUp, onProgress = _b.onProgress, onRateChange = _b.onRateChange, onReset = _b.onReset, onResize = _b.onResize, onScroll = _b.onScroll, onSecurityPolicyViolation = _b.onSecurityPolicyViolation, onSeeked = _b.onSeeked, onSeeking = _b.onSeeking, onSelect = _b.onSelect, onSelectionChange = _b.onSelectionChange, onSelectStart = _b.onSelectStart, onStalled = _b.onStalled, onSubmit = _b.onSubmit, onSuspend = _b.onSuspend, onTimeUpdate = _b.onTimeUpdate, onToggle = _b.onToggle, onTouchCancel = _b.onTouchCancel, onTouchEnd = _b.onTouchEnd, onTouchMove = _b.onTouchMove, onTouchStart = _b.onTouchStart, onTransitionCancel = _b.onTransitionCancel, onTransitionEnd = _b.onTransitionEnd, onTransitionRun = _b.onTransitionRun, onTransitionStart = _b.onTransitionStart, onVolumeChange = _b.onVolumeChange, onWaiting = _b.onWaiting, onWheel = _b.onWheel;
    return Node_1.default(__assign(__assign({ class: className, children: children,
        style: style,
        id: id }, attributes), { onabort: onAbort, onanimationcancel: onAnimationCancel, onanimationend: onAnimationEnd, onanimationiteration: onAnimationIteration, onanimationstart: onAnimationStart, onauxclick: onAuxClick, onblur: onBlur, oncancel: onCancel, oncanplay: onCanPlay, oncanplaythrough: onCanPlayThrough, onchange: onChange, onclick: onClick, onclose: onClose, oncontextmenu: onContextMenu, oncuechange: onCueChange, ondblclick: onDblClick, ondrag: onDrag, ondragend: onDragEnd, ondragenter: onDragEnter, ondragexit: onDragExit, ondragleave: onDragLeave, ondragover: onDragOver, ondragstart: onDragStart, ondrop: onDrop, ondurationchange: onDurationChange, onemptied: onEmptied, onended: onEnded, onerror: onError, onfocus: onFocus, ongotpointercapture: onGotPointerCapture, oninput: onInput, oninvalid: onInvalid, onkeydown: onKeyDown, onkeypress: onKeyPress, onkeyup: onKeyUp, onload: onLoad, onloadeddata: onLoadedData, onloadedmetadata: onLoadedMetaData, onloadstart: onLoadStart, onlostpointercapture: onLostPointerCapture, onmousedown: onMouseDown, onmouseenter: onMouseEnter, onmouseleave: onMouseLeave, onmousemove: onMouseMove, onmouseout: onMouseOut, onmouseover: onMouseOver, onmouseup: onMouseUp, onpause: onPause, onplay: onPlay, onplaying: onPlaying, onpointercancel: onPointerCancel, onpointerdown: onPointerDown, onpointerenter: onPointerEnter, onpointerleave: onPointerLeave, onpointermove: onPointerMove, onpointerout: onPointerOut, onpointerover: onPointerOver, onpointerup: onPointerUp, onprogress: onProgress, onratechange: onRateChange, onreset: onReset, onresize: onResize, onscroll: onScroll, onsecuritypolicyviolation: onSecurityPolicyViolation, onseeked: onSeeked, onseeking: onSeeking, onselect: onSelect, onselectionchange: onSelectionChange, onselectstart: onSelectStart, onstalled: onStalled, onsubmit: onSubmit, onsuspend: onSuspend, ontimeupdate: onTimeUpdate, ontoggle: onToggle, ontouchcancel: onTouchCancel, ontouchend: onTouchEnd, ontouchmove: onTouchMove, ontouchstart: onTouchStart, ontransitioncancel: onTransitionCancel, ontransitionend: onTransitionEnd, ontransitionrun: onTransitionRun, ontransitionstart: onTransitionStart, onvolumechange: onVolumeChange, onwaiting: onWaiting, onwheel: onWheel }), 'b');
};
exports.default = B;
//# sourceMappingURL=B.js.map