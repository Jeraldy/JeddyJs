"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var Node_1 = require("./Node");
var Th = function (_a) {
    var className = _a.className, children = _a.children, style = _a.style, id = _a.id, attributes = _a.attributes, onAbort = _a.onAbort, onAnimationCancel = _a.onAnimationCancel, onAnimationEnd = _a.onAnimationEnd, onAnimationIteration = _a.onAnimationIteration, onAnimationStart = _a.onAnimationStart, onAuxClick = _a.onAuxClick, onBlur = _a.onBlur, onCancel = _a.onCancel, onCanPlay = _a.onCanPlay, onCanPlayThrough = _a.onCanPlayThrough, onChange = _a.onChange, onClick = _a.onClick, onClose = _a.onClose, onContextMenu = _a.onContextMenu, onCueChange = _a.onCueChange, onDblClick = _a.onDblClick, onDrag = _a.onDrag, onDragEnd = _a.onDragEnd, onDragEnter = _a.onDragEnter, onDragExit = _a.onDragExit, onDragLeave = _a.onDragLeave, onDragOver = _a.onDragOver, onDragStart = _a.onDragStart, onDrop = _a.onDrop, onDurationChange = _a.onDurationChange, onEmptied = _a.onEmptied, onEnded = _a.onEnded, onError = _a.onError, onFocus = _a.onFocus, onGotPointerCapture = _a.onGotPointerCapture, onInput = _a.onInput, onInvalid = _a.onInvalid, onKeyDown = _a.onKeyDown, onKeyPress = _a.onKeyPress, onKeyUp = _a.onKeyUp, onLoad = _a.onLoad, onLoadedData = _a.onLoadedData, onLoadedMetaData = _a.onLoadedMetaData, onLoadStart = _a.onLoadStart, onLostPointerCapture = _a.onLostPointerCapture, onMouseDown = _a.onMouseDown, onMouseEnter = _a.onMouseEnter, onMouseLeave = _a.onMouseLeave, onMouseMove = _a.onMouseMove, onMouseOut = _a.onMouseOut, onMouseOver = _a.onMouseOver, onMouseUp = _a.onMouseUp, onPause = _a.onPause, onPlay = _a.onPlay, onPlaying = _a.onPlaying, onPointerCancel = _a.onPointerCancel, onPointerDown = _a.onPointerDown, onPointerEnter = _a.onPointerEnter, onPointerLeave = _a.onPointerLeave, onPointerMove = _a.onPointerMove, onPointerOut = _a.onPointerOut, onPointerOver = _a.onPointerOver, onPointerUp = _a.onPointerUp, onProgress = _a.onProgress, onRateChange = _a.onRateChange, onReset = _a.onReset, onResize = _a.onResize, onScroll = _a.onScroll, onSecurityPolicyViolation = _a.onSecurityPolicyViolation, onSeeked = _a.onSeeked, onSeeking = _a.onSeeking, onSelect = _a.onSelect, onSelectionChange = _a.onSelectionChange, onSelectStart = _a.onSelectStart, onStalled = _a.onStalled, onSubmit = _a.onSubmit, onSuspend = _a.onSuspend, onTimeUpdate = _a.onTimeUpdate, onToggle = _a.onToggle, onTouchCancel = _a.onTouchCancel, onTouchEnd = _a.onTouchEnd, onTouchMove = _a.onTouchMove, onTouchStart = _a.onTouchStart, onTransitionCancel = _a.onTransitionCancel, onTransitionEnd = _a.onTransitionEnd, onTransitionRun = _a.onTransitionRun, onTransitionStart = _a.onTransitionStart, onVolumeChange = _a.onVolumeChange, onWaiting = _a.onWaiting, onWheel = _a.onWheel;
    return Node_1.default(__assign(__assign({ class: className, children: children,
        style: style,
        id: id }, attributes), { onabort: onAbort, onanimationcancel: onAnimationCancel, onanimationend: onAnimationEnd, onanimationiteration: onAnimationIteration, onanimationstart: onAnimationStart, onauxclick: onAuxClick, onblur: onBlur, oncancel: onCancel, oncanplay: onCanPlay, oncanplaythrough: onCanPlayThrough, onchange: onChange, onclick: onClick, onclose: onClose, oncontextmenu: onContextMenu, oncuechange: onCueChange, ondblclick: onDblClick, ondrag: onDrag, ondragend: onDragEnd, ondragenter: onDragEnter, ondragexit: onDragExit, ondragleave: onDragLeave, ondragover: onDragOver, ondragstart: onDragStart, ondrop: onDrop, ondurationchange: onDurationChange, onemptied: onEmptied, onended: onEnded, onerror: onError, onfocus: onFocus, ongotpointercapture: onGotPointerCapture, oninput: onInput, oninvalid: onInvalid, onkeydown: onKeyDown, onkeypress: onKeyPress, onkeyup: onKeyUp, onload: onLoad, onloadeddata: onLoadedData, onloadedmetadata: onLoadedMetaData, onloadstart: onLoadStart, onlostpointercapture: onLostPointerCapture, onmousedown: onMouseDown, onmouseenter: onMouseEnter, onmouseleave: onMouseLeave, onmousemove: onMouseMove, onmouseout: onMouseOut, onmouseover: onMouseOver, onmouseup: onMouseUp, onpause: onPause, onplay: onPlay, onplaying: onPlaying, onpointercancel: onPointerCancel, onpointerdown: onPointerDown, onpointerenter: onPointerEnter, onpointerleave: onPointerLeave, onpointermove: onPointerMove, onpointerout: onPointerOut, onpointerover: onPointerOver, onpointerup: onPointerUp, onprogress: onProgress, onratechange: onRateChange, onreset: onReset, onresize: onResize, onscroll: onScroll, onsecuritypolicyviolation: onSecurityPolicyViolation, onseeked: onSeeked, onseeking: onSeeking, onselect: onSelect, onselectionchange: onSelectionChange, onselectstart: onSelectStart, onstalled: onStalled, onsubmit: onSubmit, onsuspend: onSuspend, ontimeupdate: onTimeUpdate, ontoggle: onToggle, ontouchcancel: onTouchCancel, ontouchend: onTouchEnd, ontouchmove: onTouchMove, ontouchstart: onTouchStart, ontransitioncancel: onTransitionCancel, ontransitionend: onTransitionEnd, ontransitionrun: onTransitionRun, ontransitionstart: onTransitionStart, onvolumechange: onVolumeChange, onwaiting: onWaiting, onwheel: onWheel }), 'th');
};
exports.default = Th;
//# sourceMappingURL=Th.js.map